---
name: Build and Push Multi-Platform Docker Image

'on':
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint YAML & Shell
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run yamllint
        uses: ibiqlik/action-yamllint@v3
      - name: Run shellcheck on entrypoint.sh
        uses: azohra/shell-linter@v0.6.0
        with:
          files: entrypoint.sh

  build-and-push:
    needs: lint
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build and Push Docker Image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     push: true
      #     platforms: linux/amd64
      #     tags: ghcr.io/${{ github.repository_owner }}/cli-tool-docker:latest

      # PRの場合のタグ
      - name: Build and Push Docker Image (for PR)
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ghcr.io/${{ github.repository_owner }}/cli-tool-docker:pr-${{ github.event.pull_request.number }}-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=min

      # mainブランチへのpushの場合のタグ
      - name: Build and Push Docker Image (for main branch)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ghcr.io/${{ github.repository_owner }}/cli-tool-docker:latest
          cache-from: type=gha
          cache-to: type=gha,mode=min

      - name: Scan image with Trivy
        if: github.event_name == 'pull_request'
        uses: aquasecurity/trivy-action@0.22.0
        with:
          image-ref: 'ghcr.io/${{ github.repository_owner }}/cli-tool-docker:pr-${{ github.event.pull_request.number }}-${{ github.sha }}'
          format: 'table'
          output: 'trivy-results.txt'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          timeout: '30m'

      - name: Upload Trivy scan results
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: trivy-results
          path: trivy-results.txt

      - name: Send Slack Notification
        if: always()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: 'C075AE23M9P'
          payload: |
            {
              "text": "${{ job.status == 'success' && '✅' || '❌' }} ビルド${{ job.status == 'success' && '成功' || '失敗' }}: ${{ github.repository }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ job.status == 'success' && '✅' || '❌' }} ビルドが${{ job.status == 'success' && '成功' || '失敗' }}しました\n${{ github.event_name == 'pull_request' && format('<{0}|*{1}*>', github.event.pull_request.html_url, github.event.pull_request.title) || format('(Push to `{0}`)', github.ref_name) }}"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    { "type": "mrkdwn", "text": "*リポジトリ:*\n`${{ github.repository }}`" },
                    { "type": "mrkdwn", "text": "*ブランチ:*\n`${{ github.ref_name }}`" },
                    { "type": "mrkdwn", "text": "*実行者:*\n`${{ github.actor }}`" }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": { "type": "plain_text", "text": "ワークフロー実行結果を見る" },
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # リリースノート作成（mainブランチ push 時）
  release-draft:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Draft release notes
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  vulnerability-scan:
    if: github.event_name == 'pull_request'
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Trivy scan results
        uses: actions/download-artifact@v4
        with:
          name: trivy-results
          path: .

      - name: Set up Trivy scan result path
        id: set_path
        run: echo "result_path=$(find . -name 'trivy-results.txt' | head -n 1)" >> $GITHUB_OUTPUT

      - name: Check scan results
        id: check_results
        run: |
          if [ -s "${{ steps.set_path.outputs.result_path }}" ]; then
            echo "vulnerabilities_found=true" >> $GITHUB_OUTPUT
            echo "file_content<<EOF" >> $GITHUB_OUTPUT
            cat "${{ steps.set_path.outputs.result_path }}" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "vulnerabilities_found=false" >> $GITHUB_OUTPUT
          fi

      - name: Notify Slack about vulnerabilities
        if: steps.check_results.outputs.vulnerabilities_found == 'true'
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: 'C075AE23M9P'
          payload: |
            {
              "text": "⚠️ 脆弱性が検出されました: ${{ github.repository }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "⚠️ *脆弱性スキャンレポート*\nPull Requestで脆弱性が検出されました。\n<${{ github.event.pull_request.html_url }}|*${{ github.event.pull_request.title }}*>"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "```${{ steps.check_results.outputs.file_content }}```"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack about no vulnerabilities
        if: steps.check_results.outputs.vulnerabilities_found == 'false'
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: 'C075AE23M9P'
          payload: |
            {
              "text": "✅ 脆弱性スキャン完了: ${{ github.repository }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "✅ *脆弱性スキャン完了*\nPull Requestで新たな脆弱性は検出されませんでした。\n<${{ github.event.pull_request.html_url }}|*${{ github.event.pull_request.title }}*>"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
