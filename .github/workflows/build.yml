---
name: Build and Push Multi-Platform Docker Image

'on':
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint YAML & Shell
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run yamllint
        uses: ibiqlik/action-yamllint@v3
      - name: Run shellcheck on entrypoint.sh
        uses: azohra/shell-linter@v0.6.0
        with:
          files: entrypoint.sh

  build-and-push:
    needs: lint
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build and Push Docker Image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     push: true
      #     platforms: linux/amd64
      #     tags: ghcr.io/${{ github.repository_owner }}/cli-tool-docker:latest

      # PRの場合のタグ
      - name: Build and Push Docker Image (for PR)
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ghcr.io/${{ github.repository_owner }}/cli-tool-docker:pr-${{ github.event.pull_request.number }}-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=min

      # mainブランチへのpushの場合のタグ
      - name: Build and Push Docker Image (for main branch)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ghcr.io/${{ github.repository_owner }}/cli-tool-docker:latest
          cache-from: type=gha
          cache-to: type=gha,mode=min

      # # Trivyによる脆弱性スキャン（mainのときだけ）
      # - name: Scan image with Trivy
      #   # if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      #   if: github.event_name == 'pull_request'
      #   uses: aquasecurity/trivy-action@0.31.0
      #   with:
      #     image-ref: ghcr.io/${{ github.repository_owner }}/cli-tool-docker:latest
      #     format: table
      #     exit-code: 1
      #     ignore-unfixed: true
      #     vuln-type: os,library
      #     timeout: '10m'
      #     scanners: vuln  # 脆弱性スキャンのみを実施
      #     skip-files: "/opt/rustup/toolchains/stable-x86_64-unknown-linux-gnu/share/doc/rust/COPYRIGHT.html"

      - name: Slack Notification on Success (Pull Request) 
        if: success() && github.event_name == 'pull_request'
        uses: slackapi/slack-github-action@v1.26.0
        with:
          # 送信先のチャンネルID
          channel-id: 'C075AE23M9P'
          # Slackに送信するメッセージ
          payload: |
            {
              "text": "✅ ビルド成功: ${{ github.repository }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "✅ ビルドが成功しました (Pull Request): <${{ github.event.pull_request.html_url }}|*${{ github.event.pull_request.title }}*>"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    { "type": "mrkdwn", "text": "*リポジトリ:*
`${{ github.repository }}`" },
                    { "type": "mrkdwn", "text": "*ブランチ:*
`${{ github.ref_name }}`" }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": { "type": "plain_text", "text": "View Workflow Run" },
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Slack Notification on Success (Push)
        if: success() && github.event_name != 'pull_request'
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: 'C075AE23M9P'
          payload: |
            {
              "text": "✅ ビルド成功: ${{ github.repository }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "✅ ビルドが成功しました (Push): `${{ github.ref_name }}`"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    { "type": "mrkdwn", "text": "*リポジトリ:*
`${{ github.repository }}`" },
                    { "type": "mrkdwn", "text": "*ブランチ:*
`${{ github.ref_name }}`" },
                    { "type": "mrkdwn", "text": "*コミット:*
<${{ github.event.head_commit.url }}|`${{ github.sha }}`>" }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": { "type": "plain_text", "text": "View Workflow Run" },
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Slack Notification on Failure (Pull Request)
        if: failure() && github.event_name == 'pull_request'
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: 'C075AE23M9P'
          payload: |
            {
              "text": "❌ ビルド失敗: ${{ github.repository }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "❌ ビルドが失敗しました (Pull Request): <${{ github.event.pull_request.html_url }}|*${{ github.event.pull_request.title }}*>"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    { "type": "mrkdwn", "text": "*リポジトリ:*
`${{ github.repository }}`" },
                    { "type": "mrkdwn", "text": "*ブランチ:*
`${{ github.ref_name }}`" }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": { "type": "plain_text", "text": "View Workflow Run" },
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Slack Notification on Failure (Push)
        if: failure() && github.event_name != 'pull_request'
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: 'C075AE23M9P'
          payload: |
            {
              "text": "❌ ビルド失敗: ${{ github.repository }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "❌ ビルドが失敗しました (Push): `${{ github.ref_name }}`"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    { "type": "mrkdwn", "text": "*リポジトリ:*
`${{ github.repository }}`" },
                    { "type": "mrkdwn", "text": "*ブランチ:*
`${{ github.ref_name }}`" },
                    { "type": "mrkdwn", "text": "*コミット:*
<${{ github.event.head_commit.url }}|`${{ github.sha }}`>" }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": { "type": "plain_text", "text": "View Workflow Run" },
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # リリースノート作成（mainブランチ push 時）
  release-draft:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Draft release notes
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
